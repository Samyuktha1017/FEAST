name: Train Student Pass/Fail Model
description: Train a RandomForest model using historical features CSV and output a model pickle file
inputs:
  - {name: Historical Features, type: CSV}
  - {name: Output Path Prefix, type: String}
outputs:
  - {name: Model, type: Model}
metadata:
  annotations:
    author: Sam Yu <your_email@domain.com>
implementation:
  container:
    image: python:3.10
    command:
      - sh
      - -ex
      - -c
      - |
          (PIP_DISABLE_PIP_VERSION_CHECK=1 python3 -m pip install --quiet pandas scikit-learn || \
           PIP_DISABLE_PIP_VERSION_CHECK=1 python3 -m pip install --quiet pandas scikit-learn --user)
          python3 -u -c "
import pandas as pd
from sklearn.ensemble import RandomForestClassifier
from sklearn.preprocessing import LabelEncoder
import pickle
import os

df = pd.read_csv('${0}')
df['label'] = LabelEncoder().fit_transform(['pass', 'fail', 'pass', 'fail'])
X = df[['hours_studied', 'attendance_percentage']]
y = df['label']

model = RandomForestClassifier()
model.fit(X, y)

output_path = '${1}/student_model.pkl'
os.makedirs(os.path.dirname(output_path), exist_ok=True)
with open(output_path, 'wb') as f:
    pickle.dump(model, f)
print('âœ… Model trained and saved to:', output_path)
          "
      - inputPath: Historical Features
      - inputValue: Output Path Prefix
      - outputPath: Model

name: Feast - Get Historical Features (Mocked)
description: |-
  Generates mock historical features and saves to CSV.
  (Feast repo skipped due to Elyra limitations)

inputs: []
outputs:
  - {name: historical_features, type: CSV}

implementation:
  container:
    image: python:3.10
    command:
      - sh
      - -c
      - |
        (PIP_DISABLE_PIP_VERSION_CHECK=1 python3 -m pip install --quiet pandas || \
         PIP_DISABLE_PIP_VERSION_CHECK=1 python3 -m pip install --quiet pandas --user) && "$0" "$@"
      - python3
      - -u
      - -c
      - |
        def _make_parent_dirs_and_return_path(file_path: str):
            import os
            os.makedirs(os.path.dirname(file_path), exist_ok=True)
            return file_path

        def generate_mock_features(output_csv_path: str):
            import pandas as pd

            # Manually defined feature values
            df = pd.DataFrame({
                "hours_studied": [4, 3, 5, 2],
                "attendance_percentage": [80, 70, 90, 60]
            })

            df.to_csv(output_csv_path, index=False)
            print("âœ… Mock features saved to", output_csv_path)

        import argparse
        _parser = argparse.ArgumentParser(prog='Mocked Feast Feature Generator')
        _parser.add_argument('--historical-features', dest='output_csv_path',
                             type=_make_parent_dirs_and_return_path, required=True)
        _args = _parser.parse_args()
        generate_mock_features(output_csv_path=_args.output_csv_path)

    args:
      - --historical-features
      - {outputPath: historical_features}
